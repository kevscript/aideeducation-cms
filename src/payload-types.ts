/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    users: User;
    members: Member;
    faqs: Faq;
    jobs: Job;
    news: News;
    reviews: Review;
    avatars: Avatar;
    documents: Document;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {};
}
export interface User {
  id: string;
  first_name?: string;
  last_name?: string;
  roles?: 'admin';
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string;
  resetPasswordExpiration?: string;
  salt?: string;
  hash?: string;
  loginAttempts?: number;
  lockUntil?: string;
  password: string;
}
export interface Member {
  id: string;
  first_name: string;
  last_name: string;
  user_name: string;
  avatar?: string | Avatar;
  roles: 'developer'[];
  status: 'active' | 'retired';
  joined: string;
  rank: number;
  quote?: string;
  visible?: boolean;
  full_name?: string;
  updatedAt: string;
  createdAt: string;
}
export interface Avatar {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string;
  filename?: string;
  mimeType?: string;
  filesize?: number;
  width?: number;
  height?: number;
  sizes?: {
    thumbnail?: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
  };
}
export interface Faq {
  id: string;
  question: string;
  answer: string;
  active: boolean;
  updatedAt: string;
  createdAt: string;
}
export interface Job {
  id: string;
  role: string;
  status: 'active' | 'inactive';
  description?: string;
  visible: boolean;
  updatedAt: string;
  createdAt: string;
}
export interface News {
  id: string;
  title: string;
  date: string;
  description?: string;
  document?: string | Document;
  content?: {
    [k: string]: unknown;
  }[];
  updatedAt: string;
  createdAt: string;
}
export interface Document {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string;
  filename?: string;
  mimeType?: string;
  filesize?: number;
  width?: number;
  height?: number;
}
export interface Review {
  id: string;
  username: string;
  date?: string;
  avatar?: string | Avatar;
  title?: string;
  rating?: number;
  comment?: string;
  visible?: boolean;
  updatedAt: string;
  createdAt: string;
}
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface PayloadMigration {
  id: string;
  name?: string;
  batch?: number;
  updatedAt: string;
  createdAt: string;
}


declare module 'payload' {
  export interface GeneratedTypes {
    collections: {
      'users': User
      'members': Member
      'faqs': Faq
      'jobs': Job
      'news': News
      'reviews': Review
      'avatars': Avatar
      'documents': Document
      'payload-preferences': PayloadPreference
      'payload-migrations': PayloadMigration
    }

  }
}